---
layout: post
title:  "나동빈 모험가 길드"
date:   2022-06-12 17:55:00 +0900
categories: Python Greedy Algorithm
---
__문제__

한 마을에 모험가가 N명 있다. 모험가 길드에서는 N명의 모험가를 대상으로 '공포도'를 측정하는데, '공포도'가 높은 모험가는 쉽게 공포를 느껴 위험 상황에서 제대로 대처할 능력이 떨어진다. 모험가 길드장인 동빈이는 모험가 그룹을 안전하게 구성하고자 공포도가 X인 모험가는 반드시 X명 이상으로 구성한 모험가 그룹에 참여해야 여행을 떠날 수 있다. 동빈이는 최대한 몇 개의 모험가 그룹을 만들 수 있는지 궁금하다. 동빈이를 위해 N명의 모험가에 대한 정보가 주어질 때, 여행을 떠날 수 있는 그룹 수의 최댓값을 구하는 프로그램을 작성하여라.

__입력조건__

첫째 줄에 모험가의 수 N이 주어진다.(1 <= N <= 100,000)
둘째 줄에 각 모험가의 공포도의 값을 N 이하의 자연수로 주어지며, 각 자연수는 공백으로 구분한다.

__출력조건__

여행을 떠날 수 있는 그룹 수의 최댓값을 출력합니다.

__내 풀이__

오름차순으로 정렬해서 공포도가 낮은 모험가부터 차례대로 보면서 현재 합류한 그룹원의 수와 공포도를 비교하며 그룹을 결성한다.

```python
n = int(input())
data = list(map(int, input().split()))
result = 0
cnt = 0

data.sort()

for i in data:
    cnt += 1
    if cnt >= i: #사실 여기서 i == cnt로 풀었었다
        result += 1
        cnt = 0

print(result)
```